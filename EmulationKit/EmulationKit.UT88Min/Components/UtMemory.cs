using EmulationKit.Abstractions;

namespace EmulationKit.UT88Min.Components
{
    internal class UtMemory : IMemory
    {
        private byte[] _rom = new byte[]
        {
            0x31, 0xEE, 0xC3, 0x3E, 0x11, 0xC3, 0x3B, 0x00, 0xC3, 0x00, 0x01, 0xF7, 0xEB, 0xC3, 0x7D, 0x00,
            0xD5, 0xAF, 0x57, 0xE7, 0x07, 0xC3, 0x47, 0x00, 0xE5, 0xF5, 0x21, 0x50, 0x66, 0xC3, 0x56, 0x00,
            0xDF, 0xC3, 0x5F, 0x00, 0x00, 0xC3, 0x00, 0xC0, 0x32, 0x00, 0x90, 0x22, 0x01, 0x90, 0xC9, 0x00,
            0xF5, 0xD7, 0x57, 0xD7, 0x5F, 0xF1, 0xC9, 0x00, 0xC3, 0xC1, 0x00, 0xFB, 0x32, 0x00, 0x90, 0xE7,
            0xC6, 0xF3, 0x26, 0x00, 0x6F, 0x6E, 0xE9, 0x07, 0x07, 0x07, 0xB2, 0x57, 0x32, 0x00, 0x90, 0xE7,
            0xB2, 0x32, 0x00, 0x90, 0xD1, 0xC9, 0x2B, 0x7D, 0xB4, 0xC2, 0x56, 0x00, 0xF1, 0xE1, 0xC9, 0xDB,
            0xA0, 0xC6, 0x00, 0xCA, 0x5F, 0x00, 0xFE, 0x80, 0xCA, 0x6E, 0x00, 0xE6, 0x0F, 0xC9, 0x2B, 0x3B,
            0x3B, 0xAF, 0xEF, 0xD7, 0x77, 0xDF, 0x23, 0xC3, 0x71, 0x00, 0x21, 0x00, 0xC0, 0xE7, 0x7E, 0xEF,
            0x23, 0xC3, 0x7D, 0x00, 0xF7, 0xEB, 0xAF, 0xEF, 0xDF, 0xE9, 0x21, 0x00, 0xC0, 0xC3, 0x71, 0x00,
            0xF3, 0xF7, 0xEB, 0xC3, 0x71, 0x00, 0xAF, 0x67, 0x6F, 0xEF, 0xDF, 0xC6, 0x11, 0xFE, 0x10, 0xC2,
            0x97, 0x00, 0xC7, 0x21, 0x00, 0xC0, 0xAF, 0x77, 0x7E, 0xB7, 0xC2, 0xBB, 0x00, 0x3D, 0x77, 0x7E,
            0x3C, 0xC2, 0xBB, 0x00, 0x23, 0x7C, 0xE6, 0x04, 0xCA, 0xA6, 0x00, 0x7E, 0xEF, 0xE7, 0xC3, 0xA6,
            0x00, 0xF3, 0xF5, 0xC5, 0xD5, 0xE5, 0x21, 0xE4, 0x00, 0x11, 0xFD, 0xC3, 0x06, 0x03, 0x1A, 0x3C,
            0x27, 0x12, 0xBE, 0xC2, 0xDE, 0x00, 0xAF, 0x12, 0x23, 0x13, 0x05, 0xC2, 0xCE, 0x00, 0xE1, 0xD1,
            0xC1, 0xF1, 0xFB, 0xC9, 0x60, 0x60, 0x24, 0xC3, 0x9A, 0x01, 0xC3, 0xC2, 0x01, 0xC3, 0x75, 0x01,
            0xC3, 0xF5, 0x01, 0x91, 0x8A, 0x7A, 0x96, 0xA3, 0x0B, 0x25, 0x84, 0xED, 0xE7, 0xEA, 0xF0, 0x90,
            0xC5, 0xD5, 0xF5, 0x57, 0x0E, 0x08, 0x7A, 0x07, 0x57, 0x3E, 0x01, 0xAA, 0xD3, 0xA1, 0xCD, 0x21,
            0x01, 0x3E, 0x00, 0xAA, 0xD3, 0xA1, 0xCD, 0x21, 0x01, 0x0D, 0xC2, 0x06, 0x01, 0xF1, 0xD1, 0xC1,
            0xC9, 0x06, 0x1E, 0x05, 0xC2, 0x23, 0x01, 0xC9, 0xC5, 0xD5, 0x0E, 0x00, 0x57, 0xDB, 0xA1, 0x5F,
            0x79, 0xE6, 0x7F, 0x07, 0x4F, 0xDB, 0xA1, 0xBB, 0xCA, 0x35, 0x01, 0xE6, 0x01, 0xB1, 0x4F, 0xCD,
            0x6E, 0x01, 0xDB, 0xA1, 0x5F, 0x7A, 0xB7, 0xF2, 0x63, 0x01, 0x79, 0xFE, 0xE6, 0xC2, 0x57, 0x01,
            0xAF, 0x32, 0xFC, 0xC3, 0xC3, 0x61, 0x01, 0xFE, 0x19, 0xC2, 0x30, 0x01, 0x3E, 0xFF, 0x32, 0xFC,
            0xC3, 0x16, 0x09, 0x15, 0xC2, 0x30, 0x01, 0x3A, 0xFC, 0xC3, 0xA9, 0xD1, 0xC1, 0xC9, 0x06, 0x2D,
            0x05, 0xC2, 0x70, 0x01, 0xC9, 0xC5, 0xD5, 0xE5, 0xF5, 0xF7, 0x42, 0x4B, 0xF7, 0x2E, 0x00, 0x65,
            0x0A, 0xD5, 0x5F, 0x16, 0x00, 0x19, 0xD1, 0xCD, 0x94, 0x01, 0x03, 0xC2, 0x80, 0x01, 0xEF, 0xF1,
            0xE1, 0xD1, 0xC1, 0xC7, 0x7A, 0xB8, 0xC0, 0x7B, 0xB9, 0xC9, 0xC5, 0xD5, 0xE5, 0xF5, 0xF7, 0x42,
            0x4B, 0xF7, 0xC5, 0xAF, 0x6F, 0xCF, 0x2C, 0xC2, 0xA5, 0x01, 0x3E, 0xE6, 0xCF, 0x78, 0xCF, 0x79,
            0xCF, 0x7A, 0xCF, 0x7B, 0xCF, 0x0A, 0xCF, 0xCD, 0x94, 0x01, 0x03, 0xC2, 0xB5, 0x01, 0xC1, 0xC3,
            0x7D, 0x01, 0xC5, 0xD5, 0xE5, 0xF5, 0xF7, 0x3E, 0xFF, 0xCD, 0x28, 0x01, 0x67, 0xCD, 0xEE, 0x01,
            0x6F, 0x19, 0x44, 0x4D, 0xC5, 0xCD, 0xEE, 0x01, 0x67, 0xCD, 0xEE, 0x01, 0x6F, 0x19, 0xEB, 0xCD,
            0xEE, 0x01, 0x02, 0xCD, 0x94, 0x01, 0x03, 0xC2, 0xDF, 0x01, 0xC1, 0xC3, 0x7D, 0x01, 0x3E, 0x08,
            0xCD, 0x28, 0x01, 0xC9, 0x00, 0x2A, 0xFE, 0xC3, 0x3A, 0xFD, 0xC3, 0xEF, 0xDF, 0xC3, 0xF5, 0x01,
            0xCD, 0x24, 0x02, 0xDA, 0x0A, 0x02, 0xCD, 0x0E, 0x02, 0xC7, 0xCD, 0x19, 0x02, 0xC7, 0x1A, 0x77,
            0xCD, 0x94, 0x01, 0x1B, 0x2B, 0xC2, 0x0E, 0x02, 0xC9, 0x0A, 0x77, 0xCD, 0x94, 0x01, 0x03, 0x23,
            0xC2, 0x19, 0x02, 0xC9, 0xF7, 0xD5, 0xF7, 0xEB, 0x22, 0xF2, 0xC3, 0xE1, 0x22, 0xF0, 0xC3, 0xF7,
            0xEB, 0x22, 0xF4, 0xC3, 0x7D, 0x93, 0x6F, 0x7C, 0x9A, 0x67, 0x22, 0xF8, 0xC3, 0x4D, 0x44, 0x2A,
            0xF2, 0xC3, 0xE5, 0x09, 0x22, 0xF6, 0xC3, 0x2A, 0xF0, 0xC3, 0x4D, 0x44, 0xD1, 0x2A, 0xF4, 0xC3,
            0x7D, 0x91, 0x7C, 0x98, 0xD8, 0x2A, 0xF6, 0xC3, 0xC9, 0x7C, 0xBA, 0xC0, 0x7D, 0xBB, 0xC9, 0xCD,
            0x24, 0x02, 0xCD, 0x66, 0x02, 0xC7, 0x2A, 0xF4, 0xC3, 0x56, 0xE5, 0xCD, 0xB9, 0x02, 0x60, 0xE3,
            0x78, 0xFE, 0x03, 0xC2, 0xA5, 0x02, 0x23, 0x4E, 0x23, 0x46, 0x2B, 0xE5, 0x2A, 0xF0, 0xC3, 0x79,
            0x95, 0x78, 0x9C, 0xDA, 0xA3, 0x02, 0x2A, 0xF2, 0xC3, 0x7D, 0x91, 0x7C, 0x98, 0xDA, 0xA3, 0x02,
            0x2A, 0xF8, 0xC3, 0x7D, 0x81, 0x5F, 0x7C, 0x88, 0x57, 0xE1, 0x73, 0x23, 0x72, 0x23, 0x33, 0x33,
            0xC3, 0xAB, 0x02, 0xE1, 0x2B, 0xC1, 0x23, 0x05, 0xC2, 0xA6, 0x02, 0x5D, 0x54, 0x2A, 0xF6, 0xC3,
            0x23, 0xCD, 0x59, 0x02, 0xEB, 0xC2, 0x69, 0x02, 0xC9, 0x01, 0x06, 0x03, 0x21, 0xD3, 0x02, 0x7A,
            0xA6, 0x23, 0xBE, 0xC8, 0x23, 0x0D, 0xC2, 0xBF, 0x02, 0x0E, 0x03, 0x05, 0x78, 0xFE, 0x01, 0xC2,
            0xBF, 0x02, 0xC9, 0xFF, 0xCD, 0xC7, 0xC4, 0xFF, 0xC3, 0xC7, 0xC2, 0xE7, 0x22, 0xCF, 0x01, 0xC7,
            0x06, 0xC7, 0xC6, 0xF7, 0xD3, 0xF7, 0xEB, 0x22, 0xF0, 0xC3, 0x22, 0xF4, 0xC3, 0xE5, 0xF7, 0xEB,
            0x22, 0xF2, 0xC3, 0x22, 0xF6, 0xC3, 0xF7, 0xEB, 0x22, 0xFA, 0xC3, 0xD1, 0x7D, 0x93, 0x6F, 0x7C,
            0x9A, 0x67, 0x22, 0xF8, 0xC3, 0xCD, 0x66, 0x02, 0xC7, 0xF7, 0xD5, 0xF7, 0xEB, 0x22, 0xF2, 0xC3,
            0xF7, 0xEB, 0x22, 0xFA, 0xC3, 0xF7, 0xEB, 0x22, 0xEE, 0xC3, 0xE1, 0x22, 0xF0, 0xC3, 0x56, 0xE5,
            0xCD, 0xB9, 0x02, 0x60, 0xE3, 0x78, 0xFE, 0x03, 0xC2, 0x4A, 0x03, 0x23, 0x5E, 0x23, 0x56, 0x2B,
            0xE5, 0x2A, 0xFA, 0xC3, 0xCD, 0x59, 0x02, 0xC2, 0x48, 0x03, 0x2A, 0xEE, 0xC3, 0xEB, 0xE1, 0x73,
            0x23, 0x72, 0x23, 0x33, 0x33, 0xC3, 0x50, 0x03, 0xE1, 0x2B, 0xC1, 0x23, 0x05, 0xC2, 0x4B, 0x03,
            0x5D, 0x54, 0x2A, 0xF2, 0xC3, 0x23, 0xCD, 0x59, 0x02, 0xEB, 0xC2, 0x1E, 0x03, 0xC7, 0xF7, 0xEB,
            0x22, 0xF0, 0xC3, 0x4D, 0x44, 0xF7, 0x6B, 0x62, 0x22, 0xF2, 0xC3, 0x23, 0x22, 0xF6, 0xC3, 0xCD,
            0x0E, 0x02, 0xAF, 0x77, 0xE5, 0x23, 0x22, 0xF4, 0xC3, 0x21, 0x01, 0x00, 0x22, 0xF8, 0xC3, 0xCD,
            0x66, 0x02, 0xE1, 0x7E, 0xEF, 0xD7, 0x77, 0xC7, 0xF7, 0xEB, 0x22, 0xF0, 0xC3, 0x22, 0xF4, 0xC3,
            0x4D, 0x44, 0xE5, 0xF7, 0x6B, 0x62, 0x22, 0xF2, 0xC3, 0xE1, 0xC5, 0x03, 0xCD, 0x19, 0x02, 0xAF,
            0x77, 0x2B, 0x22, 0xF6, 0xC3, 0x21, 0xFF, 0xFF, 0x22, 0xF8, 0xC3, 0xCD, 0x66, 0x02, 0xE1, 0xC3,
            0x7D, 0x00, 0xF7, 0x4B, 0x42, 0xF7, 0xD5, 0xF7, 0xEB, 0xD1, 0x0A, 0xBE, 0xC2, 0xD4, 0x03, 0x79,
            0xBB, 0xC2, 0xCF, 0x03, 0x78, 0xBA, 0xC2, 0xCF, 0x03, 0x3E, 0x11, 0x6F, 0x67, 0xEF, 0xC7, 0x03,
            0x23, 0xC3, 0xBA, 0x03, 0xF5, 0x7E, 0xEF, 0xD7, 0x77, 0xF1, 0xC3, 0xBA, 0x03, 0xC5, 0xD5, 0xE5,
            0xF5, 0x7E, 0xEF, 0xE7, 0xE3, 0x3E, 0xAF, 0xEF, 0xE7, 0xE3, 0x69, 0x60, 0x3E, 0xBC, 0xEF, 0xE7,
            0xEB, 0x3E, 0xDE, 0xEF, 0xE7, 0xF1, 0xE1, 0xD1, 0xC1, 0xC9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
        };
        private byte[] _ram = new byte[0xFFFF];

        public ushort Read16(int address)
        {
            throw new NotImplementedException();
        }

        public byte Read8(int address)
        {
            if (address < 0x0400)
            {
                return _rom[address];
            }
            return _ram[address];
        }

        public void Write16(int address, ushort value)
        {
            throw new NotImplementedException();
        }

        public void Write8(int address, byte value)
        {
            _ram[address] = value;
        }

        public string GetIndicatorsState()
        {
            return $"{_ram[0x9000]:X2}{_ram[0x9002]:X2}{_ram[0x9001]:X2}";
        }
    }
}
